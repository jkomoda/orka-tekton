---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: orka-init
spec:
  params:
    - name: orka-api-url
      type: string
      default: http://10.221.188.100
    - name: base-image
      type: string
    - name: cpu-count
      type: string
      default: "3"
    - name: vcpu-count
      type: string
      default: "3"
    - name: vnc-console
      type: string
      default: "true"
    - name: orka-creds-secret
      type: string
      default: orka-creds
    - name: orka-creds-email-key
      type: string
      default: email
    - name: orka-creds-password-key
      type: string
      default: password
  results:
    - name: vm-name
  steps:
    - name: init
      image: sburtonmacstadium/tekton-orka
      env:
        - name: ORKA_API
          value: $(params.orka-api-url)
        - name: BASE_IMAGE
          value: $(params.base-image)
        - name: CPU_COUNT
          value: $(params.cpu-count)
        - name: VCPU_COUNT
          value: $(params.vcpu-count)
        - name: VNC_CONSOLE
          value: $(params.vnc-console)
        - name: SVC_EMAIL
          valueFrom:
            secretKeyRef:
              name: $(params.orka-creds-secret)
              key: $(params.orka-creds-email-key)
        - name: SVC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(params.orka-creds-secret)
              key: $(params.orka-creds-password-key)
      script: |
        #!/bin/sh
        set -x
        orka-init
        if [ $? -ne 0 ]; then
          orka-cleanup
          exit 1
        fi
        TOKEN=/etc/orka-token
        if [ -f "$TOKEN" ]; then
          kubectl delete secret orka-token --ignore-not-found
          kubectl create secret generic orka-token \
            --from-file=token=$TOKEN
        else
          echo "fatal: token not found!"
          exit 1
        fi
