---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: orka-full
spec:
  params:
    - name: orka-api-url
      type: string
      default: http://10.221.188.100
    - name: base-image
      type: string
    - name: ssh-username
      type: string
    - name: ssh-password
      type: string
    - name: script
      type: string
  results:
    - name: vm-name
  steps:
    - name: copy-script
      image: sburtonmacstadium/tekton-orka
      script: |
        #!/bin/sh
        SCRIPT=$(mktemp)
        # Safeguard against having to escape quotes / vars in script
        cat > $SCRIPT << 'EOF'
        $(params.script)
        EOF
        # If script does not start with shebang, prepend it
        [[ ! $(head -c2 $SCRIPT) == \#! ]] && cat > build << EOF
        #!/bin/sh
        set -ex
        EOF
        cat $SCRIPT >> build
        chmod 755 build
    - name: build
      image: sburtonmacstadium/tekton-orka
      env:
        - name: ORKA_API
          value: $(params.orka-api-url)
        - name: BASE_IMAGE
          value: $(params.base-image)
        - name: SSH_USERNAME
          value: $(params.ssh-username)
        - name: SSH_PASSWORD
          value: $(params.ssh-password)
        - name: SVC_EMAIL
          valueFrom:
            secretKeyRef:
              name: tekton-orka-creds
              key: email
        - name: SVC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tekton-orka-creds
              key: password
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: tekton-orka-creds
              key: licenseKey
      command:
        - tekton-orka
      # script: |
      #   #!/bin/sh
      #   # set -x
      #   # VM_NAME=$(cat /tekton/results/vm-name)
      #   # echo "Build script:"
      #   # cat $VM_NAME
      #   # echo "WOW" >> $(workspaces.orka.path)/wow.txt
      #   tekton-orka
      #   ls -al
      #   # cat /tekton/results/vm-name
      #   ls -al $(workspaces.orka.path)
  workspaces:
    - name: orka
